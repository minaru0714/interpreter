   0  $accept : %entry% $end

   1  main : expr EOF
   2       | expr END

   3  command : expr END
   4          | LET var EQ expr END
   5          | LET REC var EQ FUN var ARROW expr END

   6  expr : LET var EQ expr IN expr
   7       | LET REC var var EQ expr IN expr
   8       | IF expr THEN expr ELSE expr
   9       | expr EQ expr
  10       | expr LT expr
  11       | expr PLUS expr
  12       | expr MINUS expr
  13       | expr TIMES expr
  14       | expr DIV expr
  15       | FUN var ARROW expr
  16       | expr apply_expr
  17       | apply_expr

  18  apply_expr : INT
  19             | BOOL
  20             | ID
  21             | LPAR expr RPAR

  22  var : ID

  23  %entry% : '\001' main
  24          | '\002' command

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	'\002'  shift 2
	.  error

	%entry%  goto 3


state 1
	%entry% : '\001' . main  (23)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	main  goto 11
	expr  goto 12
	apply_expr  goto 13


state 2
	%entry% : '\002' . command  (24)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 14
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	command  goto 15
	expr  goto 16
	apply_expr  goto 13


state 3
	$accept : %entry% . $end  (0)

	$end  accept


state 4
	apply_expr : INT .  (18)

	.  reduce 18


state 5
	apply_expr : BOOL .  (19)

	.  reduce 19


state 6
	apply_expr : ID .  (20)

	.  reduce 20


state 7
	expr : LET . var EQ expr IN expr  (6)
	expr : LET . REC var var EQ expr IN expr  (7)

	ID  shift 17
	REC  shift 18
	.  error

	var  goto 19


state 8
	expr : IF . expr THEN expr ELSE expr  (8)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 20
	apply_expr  goto 13


state 9
	apply_expr : LPAR . expr RPAR  (21)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 21
	apply_expr  goto 13


state 10
	expr : FUN . var ARROW expr  (15)

	ID  shift 17
	.  error

	var  goto 22


state 11
	%entry% : '\001' main .  (23)

	.  reduce 23


state 12
	main : expr . EOF  (1)
	main : expr . END  (2)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	END  shift 29
	EOF  shift 30
	.  error

	apply_expr  goto 31


state 13
	expr : apply_expr .  (17)

	.  reduce 17


state 14
	command : LET . var EQ expr END  (4)
	command : LET . REC var EQ FUN var ARROW expr END  (5)
	expr : LET . var EQ expr IN expr  (6)
	expr : LET . REC var var EQ expr IN expr  (7)

	ID  shift 17
	REC  shift 32
	.  error

	var  goto 33


state 15
	%entry% : '\002' command .  (24)

	.  reduce 24


state 16
	command : expr . END  (3)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	END  shift 34
	.  error

	apply_expr  goto 31


state 17
	var : ID .  (22)

	.  reduce 22


state 18
	expr : LET REC . var var EQ expr IN expr  (7)

	ID  shift 17
	.  error

	var  goto 35


state 19
	expr : LET var . EQ expr IN expr  (6)

	EQ  shift 36
	.  error


state 20
	expr : IF expr . THEN expr ELSE expr  (8)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	THEN  shift 37
	LPAR  shift 9
	.  error

	apply_expr  goto 31


state 21
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)
	apply_expr : LPAR expr . RPAR  (21)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	RPAR  shift 38
	.  error

	apply_expr  goto 31


state 22
	expr : FUN var . ARROW expr  (15)

	ARROW  shift 39
	.  error


state 23
	expr : expr PLUS . expr  (11)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 40
	apply_expr  goto 13


state 24
	expr : expr MINUS . expr  (12)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 41
	apply_expr  goto 13


state 25
	expr : expr TIMES . expr  (13)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 42
	apply_expr  goto 13


state 26
	expr : expr DIV . expr  (14)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 43
	apply_expr  goto 13


state 27
	expr : expr EQ . expr  (9)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 44
	apply_expr  goto 13


state 28
	expr : expr LT . expr  (10)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 45
	apply_expr  goto 13


state 29
	main : expr END .  (2)

	.  reduce 2


state 30
	main : expr EOF .  (1)

	.  reduce 1


state 31
	expr : expr apply_expr .  (16)

	.  reduce 16


state 32
	command : LET REC . var EQ FUN var ARROW expr END  (5)
	expr : LET REC . var var EQ expr IN expr  (7)

	ID  shift 17
	.  error

	var  goto 46


state 33
	command : LET var . EQ expr END  (4)
	expr : LET var . EQ expr IN expr  (6)

	EQ  shift 47
	.  error


state 34
	command : expr END .  (3)

	.  reduce 3


state 35
	expr : LET REC var . var EQ expr IN expr  (7)

	ID  shift 17
	.  error

	var  goto 48


state 36
	expr : LET var EQ . expr IN expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 49
	apply_expr  goto 13


state 37
	expr : IF expr THEN . expr ELSE expr  (8)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 50
	apply_expr  goto 13


state 38
	apply_expr : LPAR expr RPAR .  (21)

	.  reduce 21


state 39
	expr : FUN var ARROW . expr  (15)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 51
	apply_expr  goto 13


40: shift/reduce conflict (shift 4, reduce 11) on INT
40: shift/reduce conflict (shift 5, reduce 11) on BOOL
40: shift/reduce conflict (shift 6, reduce 11) on ID
state 40
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr PLUS expr .  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	TIMES  shift 25
	DIV  shift 26
	LPAR  shift 9
	IN  reduce 11
	PLUS  reduce 11
	MINUS  reduce 11
	EQ  reduce 11
	LT  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	RPAR  reduce 11
	END  reduce 11
	EOF  reduce 11

	apply_expr  goto 31


41: shift/reduce conflict (shift 4, reduce 12) on INT
41: shift/reduce conflict (shift 5, reduce 12) on BOOL
41: shift/reduce conflict (shift 6, reduce 12) on ID
state 41
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr MINUS expr .  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	TIMES  shift 25
	DIV  shift 26
	LPAR  shift 9
	IN  reduce 12
	PLUS  reduce 12
	MINUS  reduce 12
	EQ  reduce 12
	LT  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	RPAR  reduce 12
	END  reduce 12
	EOF  reduce 12

	apply_expr  goto 31


42: shift/reduce conflict (shift 4, reduce 13) on INT
42: shift/reduce conflict (shift 5, reduce 13) on BOOL
42: shift/reduce conflict (shift 6, reduce 13) on ID
state 42
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr TIMES expr .  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	IN  reduce 13
	PLUS  reduce 13
	MINUS  reduce 13
	TIMES  reduce 13
	DIV  reduce 13
	EQ  reduce 13
	LT  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	RPAR  reduce 13
	END  reduce 13
	EOF  reduce 13

	apply_expr  goto 31


43: shift/reduce conflict (shift 4, reduce 14) on INT
43: shift/reduce conflict (shift 5, reduce 14) on BOOL
43: shift/reduce conflict (shift 6, reduce 14) on ID
state 43
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr DIV expr .  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	IN  reduce 14
	PLUS  reduce 14
	MINUS  reduce 14
	TIMES  reduce 14
	DIV  reduce 14
	EQ  reduce 14
	LT  reduce 14
	THEN  reduce 14
	ELSE  reduce 14
	RPAR  reduce 14
	END  reduce 14
	EOF  reduce 14

	apply_expr  goto 31


44: shift/reduce conflict (shift 4, reduce 9) on INT
44: shift/reduce conflict (shift 5, reduce 9) on BOOL
44: shift/reduce conflict (shift 6, reduce 9) on ID
state 44
	expr : expr . EQ expr  (9)
	expr : expr EQ expr .  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	LPAR  shift 9
	IN  reduce 9
	EQ  reduce 9
	LT  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	RPAR  reduce 9
	END  reduce 9
	EOF  reduce 9

	apply_expr  goto 31


45: shift/reduce conflict (shift 4, reduce 10) on INT
45: shift/reduce conflict (shift 5, reduce 10) on BOOL
45: shift/reduce conflict (shift 6, reduce 10) on ID
state 45
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr LT expr .  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	LPAR  shift 9
	IN  reduce 10
	EQ  reduce 10
	LT  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	RPAR  reduce 10
	END  reduce 10
	EOF  reduce 10

	apply_expr  goto 31


state 46
	command : LET REC var . EQ FUN var ARROW expr END  (5)
	expr : LET REC var . var EQ expr IN expr  (7)

	ID  shift 17
	EQ  shift 52
	.  error

	var  goto 48


state 47
	command : LET var EQ . expr END  (4)
	expr : LET var EQ . expr IN expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 53
	apply_expr  goto 13


state 48
	expr : LET REC var var . EQ expr IN expr  (7)

	EQ  shift 54
	.  error


state 49
	expr : LET var EQ expr . IN expr  (6)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	IN  shift 55
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	.  error

	apply_expr  goto 31


state 50
	expr : IF expr THEN expr . ELSE expr  (8)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	ELSE  shift 56
	LPAR  shift 9
	.  error

	apply_expr  goto 31


51: shift/reduce conflict (shift 4, reduce 15) on INT
51: shift/reduce conflict (shift 5, reduce 15) on BOOL
51: shift/reduce conflict (shift 6, reduce 15) on ID
state 51
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : FUN var ARROW expr .  (15)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	IN  reduce 15
	THEN  reduce 15
	ELSE  reduce 15
	RPAR  reduce 15
	END  reduce 15
	EOF  reduce 15

	apply_expr  goto 31


state 52
	command : LET REC var EQ . FUN var ARROW expr END  (5)

	FUN  shift 57
	.  error


state 53
	command : LET var EQ expr . END  (4)
	expr : LET var EQ expr . IN expr  (6)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	IN  shift 55
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	END  shift 58
	.  error

	apply_expr  goto 31


state 54
	expr : LET REC var var EQ . expr IN expr  (7)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 59
	apply_expr  goto 13


state 55
	expr : LET var EQ expr IN . expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 60
	apply_expr  goto 13


state 56
	expr : IF expr THEN expr ELSE . expr  (8)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 61
	apply_expr  goto 13


state 57
	command : LET REC var EQ FUN . var ARROW expr END  (5)

	ID  shift 17
	.  error

	var  goto 62


state 58
	command : LET var EQ expr END .  (4)

	.  reduce 4


state 59
	expr : LET REC var var EQ expr . IN expr  (7)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	IN  shift 63
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	.  error

	apply_expr  goto 31


60: shift/reduce conflict (shift 4, reduce 6) on INT
60: shift/reduce conflict (shift 5, reduce 6) on BOOL
60: shift/reduce conflict (shift 6, reduce 6) on ID
state 60
	expr : LET var EQ expr IN expr .  (6)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	IN  reduce 6
	THEN  reduce 6
	ELSE  reduce 6
	RPAR  reduce 6
	END  reduce 6
	EOF  reduce 6

	apply_expr  goto 31


61: shift/reduce conflict (shift 4, reduce 8) on INT
61: shift/reduce conflict (shift 5, reduce 8) on BOOL
61: shift/reduce conflict (shift 6, reduce 8) on ID
state 61
	expr : IF expr THEN expr ELSE expr .  (8)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	IN  reduce 8
	THEN  reduce 8
	ELSE  reduce 8
	RPAR  reduce 8
	END  reduce 8
	EOF  reduce 8

	apply_expr  goto 31


state 62
	command : LET REC var EQ FUN var . ARROW expr END  (5)

	ARROW  shift 64
	.  error


state 63
	expr : LET REC var var EQ expr IN . expr  (7)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 65
	apply_expr  goto 13


state 64
	command : LET REC var EQ FUN var ARROW . expr END  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 66
	apply_expr  goto 13


65: shift/reduce conflict (shift 4, reduce 7) on INT
65: shift/reduce conflict (shift 5, reduce 7) on BOOL
65: shift/reduce conflict (shift 6, reduce 7) on ID
state 65
	expr : LET REC var var EQ expr IN expr .  (7)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	IN  reduce 7
	THEN  reduce 7
	ELSE  reduce 7
	RPAR  reduce 7
	END  reduce 7
	EOF  reduce 7

	apply_expr  goto 31


state 66
	command : LET REC var EQ FUN var ARROW expr . END  (5)
	expr : expr . EQ expr  (9)
	expr : expr . LT expr  (10)
	expr : expr . PLUS expr  (11)
	expr : expr . MINUS expr  (12)
	expr : expr . TIMES expr  (13)
	expr : expr . DIV expr  (14)
	expr : expr . apply_expr  (16)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	PLUS  shift 23
	MINUS  shift 24
	TIMES  shift 25
	DIV  shift 26
	EQ  shift 27
	LT  shift 28
	LPAR  shift 9
	END  shift 67
	.  error

	apply_expr  goto 31


state 67
	command : LET REC var EQ FUN var ARROW expr END .  (5)

	.  reduce 5


State 40 contains 3 shift/reduce conflicts.
State 41 contains 3 shift/reduce conflicts.
State 42 contains 3 shift/reduce conflicts.
State 43 contains 3 shift/reduce conflicts.
State 44 contains 3 shift/reduce conflicts.
State 45 contains 3 shift/reduce conflicts.
State 51 contains 3 shift/reduce conflicts.
State 60 contains 3 shift/reduce conflicts.
State 61 contains 3 shift/reduce conflicts.
State 65 contains 3 shift/reduce conflicts.


25 terminals, 7 nonterminals
25 grammar rules, 68 states
