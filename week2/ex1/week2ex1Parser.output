   0  $accept : %entry% $end

   1  main : expr EOF
   2       | expr END

   3  command : expr END
   4          | LET var EQ expr END

   5  expr : LET var EQ expr IN expr
   6       | IF expr THEN expr ELSE expr
   7       | compare_expr

   8  compare_expr : arith_expr EQ arith_expr
   9               | arith_expr LT arith_expr
  10               | arith_expr

  11  arith_expr : arith_expr PLUS factor_expr
  12             | arith_expr MINUS factor_expr
  13             | factor_expr

  14  factor_expr : factor_expr TIMES atomic_expr
  15              | factor_expr DIV atomic_expr
  16              | apply_expr

  17  apply_expr : FUN var ARROW expr
  18             | expr atomic_expr
  19             | atomic_expr

  20  atomic_expr : INT
  21              | BOOL
  22              | ID
  23              | LPAR expr RPAR

  24  var : ID

  25  %entry% : '\001' main
  26          | '\002' command

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	'\002'  shift 2
	.  error

	%entry%  goto 3


state 1
	%entry% : '\001' . main  (25)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	main  goto 11
	expr  goto 12
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 2
	%entry% : '\002' . command  (26)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 18
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	command  goto 19
	expr  goto 20
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 3
	$accept : %entry% . $end  (0)

	$end  accept


state 4
	atomic_expr : INT .  (20)

	.  reduce 20


state 5
	atomic_expr : BOOL .  (21)

	.  reduce 21


state 6
	atomic_expr : ID .  (22)

	.  reduce 22


state 7
	expr : LET . var EQ expr IN expr  (5)

	ID  shift 21
	.  error

	var  goto 22


state 8
	expr : IF . expr THEN expr ELSE expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 23
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 9
	atomic_expr : LPAR . expr RPAR  (23)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 24
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 10
	apply_expr : FUN . var ARROW expr  (17)

	ID  shift 21
	.  error

	var  goto 25


state 11
	%entry% : '\001' main .  (25)

	.  reduce 25


state 12
	main : expr . EOF  (1)
	main : expr . END  (2)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	END  shift 26
	EOF  shift 27
	.  error

	atomic_expr  goto 28


state 13
	expr : compare_expr .  (7)

	.  reduce 7


14: shift/reduce conflict (shift 29, reduce 10) on EQ
14: shift/reduce conflict (shift 30, reduce 10) on PLUS
14: shift/reduce conflict (shift 31, reduce 10) on MINUS
14: shift/reduce conflict (shift 32, reduce 10) on LT
state 14
	compare_expr : arith_expr . EQ arith_expr  (8)
	compare_expr : arith_expr . LT arith_expr  (9)
	compare_expr : arith_expr .  (10)
	arith_expr : arith_expr . PLUS factor_expr  (11)
	arith_expr : arith_expr . MINUS factor_expr  (12)

	EQ  shift 29
	PLUS  shift 30
	MINUS  shift 31
	LT  shift 32
	INT  reduce 10
	BOOL  reduce 10
	ID  reduce 10
	IN  reduce 10
	TIMES  reduce 10
	DIV  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	LPAR  reduce 10
	RPAR  reduce 10
	END  reduce 10
	EOF  reduce 10


15: shift/reduce conflict (shift 33, reduce 13) on TIMES
15: shift/reduce conflict (shift 34, reduce 13) on DIV
state 15
	arith_expr : factor_expr .  (13)
	factor_expr : factor_expr . TIMES atomic_expr  (14)
	factor_expr : factor_expr . DIV atomic_expr  (15)

	TIMES  shift 33
	DIV  shift 34
	INT  reduce 13
	BOOL  reduce 13
	ID  reduce 13
	IN  reduce 13
	EQ  reduce 13
	PLUS  reduce 13
	MINUS  reduce 13
	LT  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	LPAR  reduce 13
	RPAR  reduce 13
	END  reduce 13
	EOF  reduce 13


state 16
	apply_expr : atomic_expr .  (19)

	.  reduce 19


state 17
	factor_expr : apply_expr .  (16)

	.  reduce 16


state 18
	command : LET . var EQ expr END  (4)
	expr : LET . var EQ expr IN expr  (5)

	ID  shift 21
	.  error

	var  goto 35


state 19
	%entry% : '\002' command .  (26)

	.  reduce 26


state 20
	command : expr . END  (3)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	END  shift 36
	.  error

	atomic_expr  goto 28


state 21
	var : ID .  (24)

	.  reduce 24


state 22
	expr : LET var . EQ expr IN expr  (5)

	EQ  shift 37
	.  error


state 23
	expr : IF expr . THEN expr ELSE expr  (6)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	THEN  shift 38
	LPAR  shift 9
	.  error

	atomic_expr  goto 28


state 24
	apply_expr : expr . atomic_expr  (18)
	atomic_expr : LPAR expr . RPAR  (23)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	RPAR  shift 39
	.  error

	atomic_expr  goto 28


state 25
	apply_expr : FUN var . ARROW expr  (17)

	ARROW  shift 40
	.  error


state 26
	main : expr END .  (2)

	.  reduce 2


state 27
	main : expr EOF .  (1)

	.  reduce 1


state 28
	apply_expr : expr atomic_expr .  (18)

	.  reduce 18


state 29
	compare_expr : arith_expr EQ . arith_expr  (8)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 41
	compare_expr  goto 13
	arith_expr  goto 42
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 30
	arith_expr : arith_expr PLUS . factor_expr  (11)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 41
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 43
	atomic_expr  goto 16
	apply_expr  goto 17


state 31
	arith_expr : arith_expr MINUS . factor_expr  (12)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 41
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 44
	atomic_expr  goto 16
	apply_expr  goto 17


state 32
	compare_expr : arith_expr LT . arith_expr  (9)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 41
	compare_expr  goto 13
	arith_expr  goto 45
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 33
	factor_expr : factor_expr TIMES . atomic_expr  (14)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	atomic_expr  goto 46


state 34
	factor_expr : factor_expr DIV . atomic_expr  (15)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	atomic_expr  goto 47


state 35
	command : LET var . EQ expr END  (4)
	expr : LET var . EQ expr IN expr  (5)

	EQ  shift 48
	.  error


state 36
	command : expr END .  (3)

	.  reduce 3


state 37
	expr : LET var EQ . expr IN expr  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 49
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 38
	expr : IF expr THEN . expr ELSE expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 50
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 39
	atomic_expr : LPAR expr RPAR .  (23)

	.  reduce 23


state 40
	apply_expr : FUN var ARROW . expr  (17)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 51
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 41
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	atomic_expr  goto 28


42: reduce/reduce conflict (reduce 8, reduce 10) on INT
42: reduce/reduce conflict (reduce 8, reduce 10) on BOOL
42: reduce/reduce conflict (reduce 8, reduce 10) on ID
42: shift/reduce conflict (shift 29, reduce 8) on EQ
42: shift/reduce conflict (shift 30, reduce 8) on PLUS
42: shift/reduce conflict (shift 31, reduce 8) on MINUS
42: shift/reduce conflict (shift 32, reduce 8) on LT
42: reduce/reduce conflict (reduce 8, reduce 10) on LPAR
state 42
	compare_expr : arith_expr . EQ arith_expr  (8)
	compare_expr : arith_expr EQ arith_expr .  (8)
	compare_expr : arith_expr . LT arith_expr  (9)
	compare_expr : arith_expr .  (10)
	arith_expr : arith_expr . PLUS factor_expr  (11)
	arith_expr : arith_expr . MINUS factor_expr  (12)

	EQ  shift 29
	PLUS  shift 30
	MINUS  shift 31
	LT  shift 32
	INT  reduce 8
	BOOL  reduce 8
	ID  reduce 8
	IN  reduce 8
	TIMES  reduce 8
	DIV  reduce 8
	THEN  reduce 8
	ELSE  reduce 8
	LPAR  reduce 8
	RPAR  reduce 8
	END  reduce 8
	EOF  reduce 8


43: reduce/reduce conflict (reduce 11, reduce 13) on INT
43: reduce/reduce conflict (reduce 11, reduce 13) on BOOL
43: reduce/reduce conflict (reduce 11, reduce 13) on ID
43: reduce/reduce conflict (reduce 11, reduce 13) on EQ
43: reduce/reduce conflict (reduce 11, reduce 13) on PLUS
43: reduce/reduce conflict (reduce 11, reduce 13) on MINUS
43: reduce/reduce conflict (reduce 11, reduce 13) on LT
43: reduce/reduce conflict (reduce 11, reduce 13) on LPAR
state 43
	arith_expr : arith_expr PLUS factor_expr .  (11)
	arith_expr : factor_expr .  (13)
	factor_expr : factor_expr . TIMES atomic_expr  (14)
	factor_expr : factor_expr . DIV atomic_expr  (15)

	TIMES  shift 33
	DIV  shift 34
	INT  reduce 11
	BOOL  reduce 11
	ID  reduce 11
	IN  reduce 11
	EQ  reduce 11
	PLUS  reduce 11
	MINUS  reduce 11
	LT  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	LPAR  reduce 11
	RPAR  reduce 11
	END  reduce 11
	EOF  reduce 11


44: reduce/reduce conflict (reduce 12, reduce 13) on INT
44: reduce/reduce conflict (reduce 12, reduce 13) on BOOL
44: reduce/reduce conflict (reduce 12, reduce 13) on ID
44: reduce/reduce conflict (reduce 12, reduce 13) on EQ
44: reduce/reduce conflict (reduce 12, reduce 13) on PLUS
44: reduce/reduce conflict (reduce 12, reduce 13) on MINUS
44: reduce/reduce conflict (reduce 12, reduce 13) on LT
44: reduce/reduce conflict (reduce 12, reduce 13) on LPAR
state 44
	arith_expr : arith_expr MINUS factor_expr .  (12)
	arith_expr : factor_expr .  (13)
	factor_expr : factor_expr . TIMES atomic_expr  (14)
	factor_expr : factor_expr . DIV atomic_expr  (15)

	TIMES  shift 33
	DIV  shift 34
	INT  reduce 12
	BOOL  reduce 12
	ID  reduce 12
	IN  reduce 12
	EQ  reduce 12
	PLUS  reduce 12
	MINUS  reduce 12
	LT  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	LPAR  reduce 12
	RPAR  reduce 12
	END  reduce 12
	EOF  reduce 12


45: reduce/reduce conflict (reduce 9, reduce 10) on INT
45: reduce/reduce conflict (reduce 9, reduce 10) on BOOL
45: reduce/reduce conflict (reduce 9, reduce 10) on ID
45: shift/reduce conflict (shift 29, reduce 9) on EQ
45: shift/reduce conflict (shift 30, reduce 9) on PLUS
45: shift/reduce conflict (shift 31, reduce 9) on MINUS
45: shift/reduce conflict (shift 32, reduce 9) on LT
45: reduce/reduce conflict (reduce 9, reduce 10) on LPAR
state 45
	compare_expr : arith_expr . EQ arith_expr  (8)
	compare_expr : arith_expr . LT arith_expr  (9)
	compare_expr : arith_expr LT arith_expr .  (9)
	compare_expr : arith_expr .  (10)
	arith_expr : arith_expr . PLUS factor_expr  (11)
	arith_expr : arith_expr . MINUS factor_expr  (12)

	EQ  shift 29
	PLUS  shift 30
	MINUS  shift 31
	LT  shift 32
	INT  reduce 9
	BOOL  reduce 9
	ID  reduce 9
	IN  reduce 9
	TIMES  reduce 9
	DIV  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	LPAR  reduce 9
	RPAR  reduce 9
	END  reduce 9
	EOF  reduce 9


state 46
	factor_expr : factor_expr TIMES atomic_expr .  (14)

	.  reduce 14


state 47
	factor_expr : factor_expr DIV atomic_expr .  (15)

	.  reduce 15


state 48
	command : LET var EQ . expr END  (4)
	expr : LET var EQ . expr IN expr  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 52
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 49
	expr : LET var EQ expr . IN expr  (5)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	IN  shift 53
	LPAR  shift 9
	.  error

	atomic_expr  goto 28


state 50
	expr : IF expr THEN expr . ELSE expr  (6)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	ELSE  shift 54
	LPAR  shift 9
	.  error

	atomic_expr  goto 28


51: shift/reduce conflict (shift 4, reduce 17) on INT
51: shift/reduce conflict (shift 5, reduce 17) on BOOL
51: shift/reduce conflict (shift 6, reduce 17) on ID
51: shift/reduce conflict (shift 9, reduce 17) on LPAR
state 51
	apply_expr : FUN var ARROW expr .  (17)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	IN  reduce 17
	EQ  reduce 17
	PLUS  reduce 17
	MINUS  reduce 17
	TIMES  reduce 17
	DIV  reduce 17
	LT  reduce 17
	THEN  reduce 17
	ELSE  reduce 17
	RPAR  reduce 17
	END  reduce 17
	EOF  reduce 17

	atomic_expr  goto 28


state 52
	command : LET var EQ expr . END  (4)
	expr : LET var EQ expr . IN expr  (5)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	IN  shift 53
	LPAR  shift 9
	END  shift 55
	.  error

	atomic_expr  goto 28


state 53
	expr : LET var EQ expr IN . expr  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 56
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 54
	expr : IF expr THEN expr ELSE . expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	FUN  shift 10
	.  error

	expr  goto 57
	compare_expr  goto 13
	arith_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16
	apply_expr  goto 17


state 55
	command : LET var EQ expr END .  (4)

	.  reduce 4


56: shift/reduce conflict (shift 4, reduce 5) on INT
56: shift/reduce conflict (shift 5, reduce 5) on BOOL
56: shift/reduce conflict (shift 6, reduce 5) on ID
56: shift/reduce conflict (shift 9, reduce 5) on LPAR
state 56
	expr : LET var EQ expr IN expr .  (5)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	IN  reduce 5
	EQ  reduce 5
	PLUS  reduce 5
	MINUS  reduce 5
	TIMES  reduce 5
	DIV  reduce 5
	LT  reduce 5
	THEN  reduce 5
	ELSE  reduce 5
	RPAR  reduce 5
	END  reduce 5
	EOF  reduce 5

	atomic_expr  goto 28


57: shift/reduce conflict (shift 4, reduce 6) on INT
57: shift/reduce conflict (shift 5, reduce 6) on BOOL
57: shift/reduce conflict (shift 6, reduce 6) on ID
57: shift/reduce conflict (shift 9, reduce 6) on LPAR
state 57
	expr : IF expr THEN expr ELSE expr .  (6)
	apply_expr : expr . atomic_expr  (18)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	IN  reduce 6
	EQ  reduce 6
	PLUS  reduce 6
	MINUS  reduce 6
	TIMES  reduce 6
	DIV  reduce 6
	LT  reduce 6
	THEN  reduce 6
	ELSE  reduce 6
	RPAR  reduce 6
	END  reduce 6
	EOF  reduce 6

	atomic_expr  goto 28


State 14 contains 4 shift/reduce conflicts.
State 15 contains 2 shift/reduce conflicts.
State 42 contains 4 shift/reduce conflicts, 4 reduce/reduce conflicts.
State 43 contains 8 reduce/reduce conflicts.
State 44 contains 8 reduce/reduce conflicts.
State 45 contains 4 shift/reduce conflicts, 4 reduce/reduce conflicts.
State 51 contains 4 shift/reduce conflicts.
State 56 contains 4 shift/reduce conflicts.
State 57 contains 4 shift/reduce conflicts.


25 terminals, 11 nonterminals
27 grammar rules, 58 states
