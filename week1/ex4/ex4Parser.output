   0  $accept : %entry% $end

   1  main : expr EOF
   2       | expr END

   3  command : expr END
   4          | LET var EQ expr END

   5  expr : LET var EQ expr IN expr
   6       | IF expr THEN expr ELSE expr
   7       | compare_expr

   8  compare_expr : arith_expr EQ arith_expr
   9               | arith_expr LT arith_expr
  10               | arith_expr

  11  arith_expr : arith_expr PLUS factor_expr
  12             | arith_expr MINUS factor_expr
  13             | factor_expr

  14  factor_expr : factor_expr TIMES atomic_expr
  15              | factor_expr DIV atomic_expr
  16              | atomic_expr

  17  atomic_expr : INT
  18              | BOOL
  19              | ID
  20              | LPAR expr RPAR

  21  var : ID

  22  %entry% : '\001' main
  23          | '\002' command

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	'\002'  shift 2
	.  error

	%entry%  goto 3


state 1
	%entry% : '\001' . main  (22)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	main  goto 10
	expr  goto 11
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 2
	%entry% : '\002' . command  (23)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 16
	IF  shift 8
	LPAR  shift 9
	.  error

	command  goto 17
	expr  goto 18
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 3
	$accept : %entry% . $end  (0)

	$end  accept


state 4
	atomic_expr : INT .  (17)

	.  reduce 17


state 5
	atomic_expr : BOOL .  (18)

	.  reduce 18


state 6
	atomic_expr : ID .  (19)

	.  reduce 19


state 7
	expr : LET . var EQ expr IN expr  (5)

	ID  shift 19
	.  error

	var  goto 20


state 8
	expr : IF . expr THEN expr ELSE expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 21
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 9
	atomic_expr : LPAR . expr RPAR  (20)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 22
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 10
	%entry% : '\001' main .  (22)

	.  reduce 22


state 11
	main : expr . EOF  (1)
	main : expr . END  (2)

	END  shift 23
	EOF  shift 24
	.  error


state 12
	expr : compare_expr .  (7)

	.  reduce 7


state 13
	compare_expr : arith_expr . EQ arith_expr  (8)
	compare_expr : arith_expr . LT arith_expr  (9)
	compare_expr : arith_expr .  (10)
	arith_expr : arith_expr . PLUS factor_expr  (11)
	arith_expr : arith_expr . MINUS factor_expr  (12)

	EQ  shift 25
	PLUS  shift 26
	MINUS  shift 27
	LT  shift 28
	IN  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	RPAR  reduce 10
	END  reduce 10
	EOF  reduce 10


state 14
	arith_expr : factor_expr .  (13)
	factor_expr : factor_expr . TIMES atomic_expr  (14)
	factor_expr : factor_expr . DIV atomic_expr  (15)

	TIMES  shift 29
	DIV  shift 30
	IN  reduce 13
	EQ  reduce 13
	PLUS  reduce 13
	MINUS  reduce 13
	LT  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	RPAR  reduce 13
	END  reduce 13
	EOF  reduce 13


state 15
	factor_expr : atomic_expr .  (16)

	.  reduce 16


state 16
	command : LET . var EQ expr END  (4)
	expr : LET . var EQ expr IN expr  (5)

	ID  shift 19
	.  error

	var  goto 31


state 17
	%entry% : '\002' command .  (23)

	.  reduce 23


state 18
	command : expr . END  (3)

	END  shift 32
	.  error


state 19
	var : ID .  (21)

	.  reduce 21


state 20
	expr : LET var . EQ expr IN expr  (5)

	EQ  shift 33
	.  error


state 21
	expr : IF expr . THEN expr ELSE expr  (6)

	THEN  shift 34
	.  error


state 22
	atomic_expr : LPAR expr . RPAR  (20)

	RPAR  shift 35
	.  error


state 23
	main : expr END .  (2)

	.  reduce 2


state 24
	main : expr EOF .  (1)

	.  reduce 1


state 25
	compare_expr : arith_expr EQ . arith_expr  (8)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	arith_expr  goto 36
	factor_expr  goto 14
	atomic_expr  goto 15


state 26
	arith_expr : arith_expr PLUS . factor_expr  (11)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	factor_expr  goto 37
	atomic_expr  goto 15


state 27
	arith_expr : arith_expr MINUS . factor_expr  (12)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	factor_expr  goto 38
	atomic_expr  goto 15


state 28
	compare_expr : arith_expr LT . arith_expr  (9)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	arith_expr  goto 39
	factor_expr  goto 14
	atomic_expr  goto 15


state 29
	factor_expr : factor_expr TIMES . atomic_expr  (14)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	atomic_expr  goto 40


state 30
	factor_expr : factor_expr DIV . atomic_expr  (15)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LPAR  shift 9
	.  error

	atomic_expr  goto 41


state 31
	command : LET var . EQ expr END  (4)
	expr : LET var . EQ expr IN expr  (5)

	EQ  shift 42
	.  error


state 32
	command : expr END .  (3)

	.  reduce 3


state 33
	expr : LET var EQ . expr IN expr  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 43
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 34
	expr : IF expr THEN . expr ELSE expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 44
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 35
	atomic_expr : LPAR expr RPAR .  (20)

	.  reduce 20


state 36
	compare_expr : arith_expr EQ arith_expr .  (8)
	arith_expr : arith_expr . PLUS factor_expr  (11)
	arith_expr : arith_expr . MINUS factor_expr  (12)

	PLUS  shift 26
	MINUS  shift 27
	IN  reduce 8
	THEN  reduce 8
	ELSE  reduce 8
	RPAR  reduce 8
	END  reduce 8
	EOF  reduce 8


state 37
	arith_expr : arith_expr PLUS factor_expr .  (11)
	factor_expr : factor_expr . TIMES atomic_expr  (14)
	factor_expr : factor_expr . DIV atomic_expr  (15)

	TIMES  shift 29
	DIV  shift 30
	IN  reduce 11
	EQ  reduce 11
	PLUS  reduce 11
	MINUS  reduce 11
	LT  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	RPAR  reduce 11
	END  reduce 11
	EOF  reduce 11


state 38
	arith_expr : arith_expr MINUS factor_expr .  (12)
	factor_expr : factor_expr . TIMES atomic_expr  (14)
	factor_expr : factor_expr . DIV atomic_expr  (15)

	TIMES  shift 29
	DIV  shift 30
	IN  reduce 12
	EQ  reduce 12
	PLUS  reduce 12
	MINUS  reduce 12
	LT  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	RPAR  reduce 12
	END  reduce 12
	EOF  reduce 12


state 39
	compare_expr : arith_expr LT arith_expr .  (9)
	arith_expr : arith_expr . PLUS factor_expr  (11)
	arith_expr : arith_expr . MINUS factor_expr  (12)

	PLUS  shift 26
	MINUS  shift 27
	IN  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	RPAR  reduce 9
	END  reduce 9
	EOF  reduce 9


state 40
	factor_expr : factor_expr TIMES atomic_expr .  (14)

	.  reduce 14


state 41
	factor_expr : factor_expr DIV atomic_expr .  (15)

	.  reduce 15


state 42
	command : LET var EQ . expr END  (4)
	expr : LET var EQ . expr IN expr  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 45
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 43
	expr : LET var EQ expr . IN expr  (5)

	IN  shift 46
	.  error


state 44
	expr : IF expr THEN expr . ELSE expr  (6)

	ELSE  shift 47
	.  error


state 45
	command : LET var EQ expr . END  (4)
	expr : LET var EQ expr . IN expr  (5)

	IN  shift 46
	END  shift 48
	.  error


state 46
	expr : LET var EQ expr IN . expr  (5)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 49
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 47
	expr : IF expr THEN expr ELSE . expr  (6)

	INT  shift 4
	BOOL  shift 5
	ID  shift 6
	LET  shift 7
	IF  shift 8
	LPAR  shift 9
	.  error

	expr  goto 50
	compare_expr  goto 12
	arith_expr  goto 13
	factor_expr  goto 14
	atomic_expr  goto 15


state 48
	command : LET var EQ expr END .  (4)

	.  reduce 4


state 49
	expr : LET var EQ expr IN expr .  (5)

	.  reduce 5


state 50
	expr : IF expr THEN expr ELSE expr .  (6)

	.  reduce 6


23 terminals, 10 nonterminals
24 grammar rules, 51 states
